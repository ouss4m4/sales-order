{"version":3,"sources":["api/client.ts","client/ClientDetails/ClientDetails.tsx","client/ClientDetails/ClientDetailsPage.tsx","client/ClientsList/AddClient.tsx","client/ClientsList/ClientRow.tsx","client/ClientsList/ClientsList.tsx","client/ClientPage.tsx","api/item.ts","item/ItemDetails/ItemDetails.tsx","item/ItemDetails/ItemDetailsPage.tsx","item/components/AddItem.tsx","item/ItemsList/Item.tsx","item/ItemsList/ItemsTable.tsx","item/ItemPage.tsx","logo.svg","shared/components/autocomplete.tsx","shared/debounceFn.ts","shared/components/ClientPicker.tsx","shared/components/ItemPicker.tsx","order/CreateOrder/CreateOrderPage.tsx","api/order.ts","order/OrderDetails/OrderDetails.tsx","order/OrderDetails/OrderDetailsPage.tsx","order/OrderPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ClientApi","url","headers","Accept","fetch","this","then","data","json","clients","console","log","client","method","body","JSON","stringify","response","cardcode","Error","clientApi","ClientDetails","onEditClient","history","useHistory","useState","editing","setEditing","cardCode","cardName","shippingAddress","billingAddress","phoneNumber","formState","setFormState","handleInputChange","e","input","target","name","value","onSaveClick","a","editedItem","className","type","onChange","onClick","goBack","ClientDetailsPage","useParams","setClient","loading","setLoading","useEffect","fetchClientDetails","parseInt","getClientById","details","message","editClientDetails","editCLient","AddClient","onClientAdded","initialFormState","ev","onSubmit","preventDefault","onFormSubmit","placeholder","required","ClientRow","to","ClientsList","map","renderRows","ClientPage","fetchClients","list","setList","getClients","result","addClient","ItemApi","items","item","itemcode","itemApi","ItemDetails","onEditSubmit","onDeleteItem","SetEditing","itemName","description","stockQty","unitPrice","itemCode","onDeleteClick","window","confirm","deleted","onBackClick","alert","ItemDetailsPage","setItem","fetchItemDetails","getItemById","editItemDetails","editItem","deleteItem","AddItem","onItemAdded","itemname","stockqty","unitprice","useReducer","state","action","field","payload","dispatch","Item","ItemsTable","Items","ItemPage","props","fetchItems","getItems","addItem","AutoComp","options","showByKey","label","onOptionSelected","onInputChange","inputChange","debounced","useMemo","func","timeoutId","waitMilliseconds","isImmediate","callback","maxWait","lastInvokeTime","Date","now","promises","nextInvokeTimeout","undefined","timeSinceLastInvocation","debouncedFunction","args","context","Promise","resolve","reject","shouldCallNow","clearTimeout","setTimeout","apply","forEach","push","cancel","reason","debounceFn","Stack","spacing","sx","width","Autocomplete","val","selected","find","opt","optionChange","freeSolo","disableClearable","option","renderInput","params","TextField","ClientPicker","clientSelected","setClients","chunk","setChunk","ItemPicker","itemSelected","setItems","CreateOrderPage","OrderApi","orders","order","orderId","orderApi","OrderDetails","docDate","docDueDate","orderLines","line","i","quantity","lineId","OrderDetailsPage","setOrder","fetchOrderDetails","getOrderById","OrderPage","fetchOrders","getOrders","formatDate","raw","date","Intl","DateTimeFormat","dateStyle","format","or","App","src","logo","alt","style","display","flexDirection","justifyContent","alignItems","marginBottom","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f118f1c.chunk.js","sourcesContent":["import { IClient } from '../client/typings';\n\nclass ClientApi {\n  constructor(private url: string) {}\n  private headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  public async getClients(): Promise<IClient[]> {\n    try {\n      const clients = await fetch(`${this.url}/clients`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return clients;\n    } catch (error) {\n      console.log('error fetching clients', error);\n      return [];\n    }\n  }\n\n  public async addClient(client: IClient): Promise<void> {\n    try {\n      const response = await fetch(`${this.url}/clients`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify(client),\n      }).then((data) => data.json());\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public async getClientById(cardcode: number): Promise<IClient> {\n    try {\n      const response = await fetch(`${this.url}/clients/${cardcode}`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return response;\n    } catch (error: any) {\n      throw new Error(error);\n    }\n  }\n\n  public async editCLient(client: IClient): Promise<IClient> {\n    try {\n      const response = await fetch(`${this.url}/clients`, {\n        method: 'PUT',\n        headers: this.headers,\n        body: JSON.stringify(client),\n      }).then((data) => data.json());\n      return response;\n    } catch (error: any) {\n      throw new Error(error);\n    }\n  }\n}\n\nexport const clientApi = new ClientApi('/api');\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { IClient } from '../typings';\n\ninterface Props {\n  client: IClient;\n  onEditClient: (client: IClient) => Promise<boolean>;\n}\n\nconst ClientDetails = ({ client, onEditClient }: Props) => {\n  const history = useHistory();\n  const [editing, setEditing] = useState(false);\n  const [formState, setFormState] = useState({\n    cardCode: client.cardCode,\n    cardName: client.cardName,\n    shippingAddress: client.shippingAddress,\n    billingAddress: client.billingAddress,\n    phoneNumber: client.phoneNumber,\n  });\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let input = e.target;\n    setFormState({\n      ...formState,\n      [input.name]: input.value,\n    });\n  };\n\n  const onSaveClick = async () => {\n    const editedItem: IClient = {\n      cardCode: client.cardCode,\n      cardName: formState.cardName,\n      shippingAddress: formState.shippingAddress,\n      billingAddress: formState.billingAddress,\n      phoneNumber: formState.phoneNumber,\n    };\n\n    await onEditClient(editedItem);\n    setEditing(false);\n  };\n\n  const onEditClick = () => {\n    setEditing(true);\n  };\n\n  const onCancelClick = () => {\n    setFormState(client);\n    setEditing(false);\n  };\n\n  const onBackClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      {client && (\n        <div>\n          <div className=\"two-cols\">\n            <strong>CardName: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.cardName}\n                name=\"cardName\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <span>{client.cardName}</span>\n            )}\n          </div>\n          <div className=\"two-cols\">\n            <strong>Shipping Address: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.shippingAddress}\n                name=\"shippingAddress\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{client.shippingAddress}</p>\n            )}\n          </div>\n          <div className=\"two-cols\">\n            <strong>Billing Address: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.billingAddress}\n                name=\"billingAddress\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{client.billingAddress}</p>\n            )}\n          </div>\n          <div>\n            <strong>Phone Number: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.phoneNumber}\n                name=\"unitPrice\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{client.phoneNumber}</p>\n            )}\n          </div>\n          <div>\n            {editing ? (\n              <button onClick={onSaveClick}>Save</button>\n            ) : (\n              <button onClick={onEditClick}>Edit</button>\n            )}\n            {editing ? (\n              <button onClick={onCancelClick}>Cancel</button>\n            ) : (\n              <button onClick={onBackClick}>Back</button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClientDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { clientApi } from '../../api/client';\nimport { IClient } from '../typings';\nimport ClientDetails from './ClientDetails';\n\nconst ClientDetailsPage = () => {\n  const { cardcode } = useParams<{ cardcode: string }>();\n  const [client, setClient] = useState<IClient>();\n  const [loading, setLoading] = useState<string>();\n\n  useEffect(() => {\n    fetchClientDetails(parseInt(cardcode));\n  }, [cardcode]);\n\n  const fetchClientDetails = async (cardcode: number) => {\n    try {\n      setLoading('loading ...');\n      const details = await clientApi.getClientById(cardcode);\n      setClient(details);\n      setLoading('');\n    } catch (error: any) {\n      setLoading(error.message);\n    }\n  };\n\n  const editClientDetails = async (client: IClient): Promise<boolean> => {\n    try {\n      await clientApi.editCLient(client);\n      setClient(client);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      {client && (\n        <ClientDetails client={client} onEditClient={editClientDetails} />\n      )}\n      <p>{loading}</p>\n    </>\n  );\n};\n\nexport default ClientDetailsPage;\n","import React, { useState } from 'react';\nimport { IClient } from '../typings';\n\ninterface Props {\n  onClientAdded: (client: IClient) => void;\n}\n\nconst AddClient = ({ onClientAdded }: Props) => {\n  const initialFormState = {\n    cardName: '',\n    shippingAddress: '',\n    billingAddress: '',\n    phoneNumber: '',\n  };\n\n  const [formState, setFormState] = useState(initialFormState);\n  const handleInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    let input = ev.target;\n    setFormState({\n      ...formState,\n      [input.name]: input.value,\n    });\n  };\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const client: any = {\n      cardName: formState.cardName,\n      billingAddress: formState.billingAddress,\n      shippingAddress: formState.shippingAddress,\n      phoneNumber: formState.phoneNumber,\n    };\n    onClientAdded(client);\n    setFormState(initialFormState);\n  };\n\n  return (\n    <div>\n      <form onSubmit={(e) => onFormSubmit(e)}>\n        <input\n          type=\"text\"\n          name=\"cardName\"\n          placeholder=\"Name\"\n          onChange={(e) => handleInputChange(e)}\n          value={formState.cardName}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"shippingAddress\"\n          placeholder=\"Shipping Address\"\n          onChange={(e) => handleInputChange(e)}\n          value={formState.shippingAddress}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"billingAddress\"\n          placeholder=\"Billing Address\"\n          onChange={(e) => handleInputChange(e)}\n          value={formState.billingAddress}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"phoneNumber\"\n          placeholder=\"Phone\"\n          onChange={(e) => handleInputChange(e)}\n          value={formState.phoneNumber}\n          required\n        />\n        <input type=\"submit\" name=\"submit\" value=\"add\" required />\n      </form>\n    </div>\n  );\n};\n\nexport default AddClient;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IClient } from '../typings';\n\ninterface Props {\n  client: IClient;\n}\n\nconst ClientRow = ({ client }: Props) => {\n  return (\n    <tr>\n      <td>{client.cardCode}</td>\n      <td>{client.cardName}</td>\n      <td>{client.billingAddress}</td>\n      <td>{client.shippingAddress}</td>\n      <td>{client.phoneNumber}</td>\n      <td>\n        <Link to={`/clients/${client.cardCode}`}>{'>'}</Link>\n      </td>\n    </tr>\n  );\n};\n\nexport default ClientRow;\n","import React from 'react';\nimport { IClient } from '../typings';\nimport ClientRow from './ClientRow';\n\ninterface Props {\n  clients: IClient[];\n}\n\nconst ClientsList = ({ clients }: Props) => {\n  const renderRows = (clients: IClient[]) => {\n    return clients.map((client) => (\n      <ClientRow client={client} key={client.cardCode} />\n    ));\n  };\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>cardCode</th>\n            <th>cardName</th>\n            <th>Shipping Address</th>\n            <th>Billing Address</th>\n            <th>Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>{renderRows(clients)}</tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ClientsList;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { clientApi } from '../api/client';\nimport AddClient from './ClientsList/AddClient';\nimport ClientsList from './ClientsList/ClientsList';\nimport { IClient } from './typings';\n\nexport default function ClientPage(): ReactElement {\n  useEffect(() => {\n    fetchClients();\n  }, []);\n  const [list, setList] = useState<IClient[]>([]);\n\n  const fetchClients = async () => {\n    const result = await clientApi.getClients();\n    setList(result);\n  };\n\n  const addClient = async (client: IClient): Promise<void> => {\n    await clientApi.addClient(client);\n    fetchClients();\n  };\n\n  return (\n    <div>\n      <AddClient onClientAdded={addClient} />\n      <ClientsList clients={list} />\n    </div>\n  );\n}\n","import { IItem } from '../item/typing/IItem';\n\nclass ItemApi {\n  constructor(private url: string) {}\n  private headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  public async getItems(): Promise<IItem[]> {\n    try {\n      const items = await fetch(`${this.url}/items`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return items;\n    } catch (error) {\n      console.log('error fetching items', error);\n      return [];\n    }\n  }\n\n  public async addItem(item: IItem): Promise<void> {\n    try {\n      const response = await fetch(`${this.url}/items`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify(item),\n      }).then((data) => data.json());\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public async getItemById(itemcode: number): Promise<IItem> {\n    try {\n      const response = await fetch(`${this.url}/items/${itemcode}`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return response;\n    } catch (error: any) {\n      throw new Error('Item not found');\n    }\n  }\n  public async editItem(item: IItem): Promise<IItem> {\n    try {\n      const response = await fetch(`${this.url}/items`, {\n        headers: this.headers,\n        method: 'PUT',\n        body: JSON.stringify(item),\n      }).then((data) => data.json());\n      return response;\n    } catch (error: any) {\n      throw new Error('Edit failed');\n    }\n  }\n\n  public async deleteItem(item: IItem): Promise<boolean> {\n    try {\n      await fetch(`${this.url}/items`, {\n        headers: this.headers,\n        method: 'DELETE',\n        body: JSON.stringify(item),\n      });\n      return true;\n    } catch (error: any) {\n      console.log(error);\n      throw new Error('Delete failed');\n    }\n  }\n}\n\nexport const itemApi = new ItemApi('/api');\n","import React, { FC, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { IItem } from '../typing/IItem';\n\ninterface Props {\n  item: IItem;\n  onEditSubmit: (item: IItem) => Promise<boolean>;\n  onDeleteItem: (item: IItem) => Promise<boolean>;\n}\n\nconst ItemDetails: FC<Props> = ({ item, onEditSubmit, onDeleteItem }) => {\n  const history = useHistory();\n  const [editing, SetEditing] = useState(false);\n  const [formState, setFormState] = useState({\n    itemName: item.itemName,\n    description: item.description,\n    stockQty: item.stockQty,\n    unitPrice: item.unitPrice,\n  });\n\n  const onEditClick = () => {\n    SetEditing(true);\n  };\n\n  const onSaveClick = async () => {\n    const editedItem: IItem = {\n      itemCode: item.itemCode,\n      description: formState.description,\n      itemName: formState.itemName,\n      stockQty: formState.stockQty,\n      unitPrice: formState.unitPrice,\n    };\n\n    await onEditSubmit(editedItem);\n    SetEditing(false);\n  };\n\n  const onCancelClick = () => {\n    setFormState({\n      itemName: item.itemName,\n      description: item.description,\n      stockQty: item.stockQty,\n      unitPrice: item.unitPrice,\n    });\n    SetEditing(false);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let input = e.target;\n    setFormState({\n      ...formState,\n      [input.name]: input.value,\n    });\n  };\n\n  const onDeleteClick = async () => {\n    let confirmDelete = window.confirm('You sure you want to delete ?');\n    if (confirmDelete) {\n      var deleted = await onDeleteItem(item);\n      console.log('------', deleted);\n      if (deleted) {\n        onBackClick();\n      } else {\n        alert('can not delete');\n      }\n    } else {\n      return;\n    }\n  };\n  const onBackClick = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      {item && (\n        <div>\n          <div className=\"two-cols\">\n            <strong>ItemName: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.itemName}\n                name=\"itemName\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <span>{item.itemName}</span>\n            )}\n          </div>\n          <div className=\"two-cols\">\n            <strong>Description: </strong>\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.description}\n                name=\"description\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{item.description}</p>\n            )}\n          </div>\n          <div className=\"two-cols\">\n            <strong>Quantity: </strong>{' '}\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.stockQty}\n                name=\"stockQty\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{item.stockQty}</p>\n            )}\n          </div>\n          <div>\n            <strong>Price: </strong>{' '}\n            {editing ? (\n              <input\n                type=\"text\"\n                value={formState.unitPrice}\n                name=\"unitPrice\"\n                onChange={(e) => handleInputChange(e)}\n              />\n            ) : (\n              <p>{item.unitPrice}</p>\n            )}\n          </div>\n          <div>\n            {!editing && <button onClick={onDeleteClick}>Delete</button>}\n            {editing ? (\n              <button onClick={onSaveClick}>Save</button>\n            ) : (\n              <button onClick={onEditClick}>Edit</button>\n            )}\n            {editing ? (\n              <button onClick={onCancelClick}>Cancel</button>\n            ) : (\n              <button onClick={onBackClick}>Back</button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ItemDetails;\n","import React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { itemApi } from '../../api/item';\nimport ItemDetails from './ItemDetails';\nimport { IItem } from '../typing/IItem';\n\nexport const ItemDetailsPage: FC = () => {\n  const { itemcode } = useParams<{ itemcode: string }>();\n  const [item, setItem] = useState<IItem>();\n  const [loading, setLoading] = useState<string>();\n\n  useEffect(() => {\n    fetchItemDetails(parseInt(itemcode));\n  }, [itemcode]);\n\n  const fetchItemDetails = async (itemcode: number) => {\n    try {\n      setLoading('loading ...');\n      const details = await itemApi.getItemById(itemcode);\n      setItem(details);\n      setLoading('');\n    } catch (error: any) {\n      setLoading(error.message);\n    }\n  };\n\n  const editItemDetails = async (item: IItem): Promise<boolean> => {\n    try {\n      await itemApi.editItem(item);\n      setItem(item);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  const deleteItem = async (item: IItem): Promise<boolean> => {\n    try {\n      await itemApi.deleteItem(item);\n      setItem(item);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  return (\n    <>\n      {item && (\n        <ItemDetails\n          item={item}\n          onEditSubmit={editItemDetails}\n          onDeleteItem={deleteItem}\n        />\n      )}\n      <p>{loading}</p>\n    </>\n  );\n};\n","import React, { FC, useReducer } from 'react';\nimport { IItem } from '../typing/IItem';\n\ninterface Props {\n  onItemAdded: (item: IItem) => void;\n}\n\ninterface IFormState {\n  itemname: string;\n  description: string;\n  stockqty: number;\n  unitprice: number;\n}\n\ninterface IAction {\n  type: string;\n  field?: string;\n  payload?: string;\n}\n\nconst AddItem: FC<Props> = ({ onItemAdded }) => {\n  const initialFormState: IFormState = {\n    itemname: '',\n    description: '',\n    stockqty: 0,\n    unitprice: 0,\n  };\n\n  const formReducer = (state: IFormState, action: IAction) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        return {\n          ...state,\n          [action.field as string]: action.payload,\n        };\n      case 'RESET':\n        return initialFormState;\n      default:\n        return state;\n    }\n  };\n\n  const [formState, dispatch] = useReducer(formReducer, initialFormState);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      field: e.target.name,\n      payload: e.target.value,\n    });\n  };\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const Item: IItem = {\n      itemName: formState.itemname,\n      description: formState.description,\n      stockQty: formState.stockqty,\n      unitPrice: formState.unitprice,\n    };\n    // @TODO: Add Validation using the model ?\n    onItemAdded(Item);\n    dispatch({ type: 'RESET' });\n  };\n\n  return (\n    <form onSubmit={(e) => onFormSubmit(e)}>\n      <input\n        type=\"text\"\n        name=\"itemname\"\n        placeholder=\"Name\"\n        onChange={(e) => handleInputChange(e)}\n        value={formState.itemname}\n        required\n      />\n      <input\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        onChange={(e) => handleInputChange(e)}\n        value={formState.description}\n        required\n      />\n      <input\n        type=\"number\"\n        name=\"stockqty\"\n        placeholder=\"Quantity\"\n        onChange={(e) => handleInputChange(e)}\n        value={formState.stockqty}\n        required\n      />\n      <input\n        type=\"number\"\n        name=\"unitprice\"\n        placeholder=\"Price\"\n        onChange={(e) => handleInputChange(e)}\n        value={formState.unitprice}\n        required\n      />\n      <input type=\"submit\" name=\"submit\" value=\"add\" required />\n    </form>\n  );\n};\n\nexport default AddItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IItem } from '../typing/IItem';\n\ninterface Props {\n  item: IItem;\n}\n\nexport const Item = ({ item }: Props) => {\n  return (\n    <tr>\n      <td>{item.itemCode}</td>\n      <td>{item.itemName}</td>\n      <td>{item.description}</td>\n      <td>{item.stockQty}</td>\n      <td>{item.unitPrice}</td>\n      <td>\n        <Link to={`/items/${item.itemCode}`}>{'>'}</Link>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { IItem } from '../typing/IItem';\nimport { Item } from './Item';\n\ninterface Props {\n  Items: IItem[];\n}\n\nexport const ItemsTable = ({ Items }: Props) => {\n  const renderRows = (items: IItem[]) => {\n    return items.map((item) => <Item item={item} key={item.itemCode} />);\n  };\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>itemCode</th>\n            <th>itemName</th>\n            <th>description</th>\n            <th>stockQty</th>\n            <th>unitPrice</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>{renderRows(Items)}</tbody>\n      </table>\n      {/*  <div>\n        here\n        <Switch>\n          <Route path={`/items/:itemcode`}>\n            <ItemDetails />\n          </Route>\n        </Switch>\n      </div> */}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { itemApi } from '../api/item';\nimport AddItem from './components/AddItem';\nimport { ItemsTable } from './ItemsList/ItemsTable';\nimport { IItem } from './typing/IItem';\n\ninterface Props {}\n\nexport const ItemPage = (props: Props) => {\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [list, setList] = useState<IItem[]>([]);\n\n  const fetchItems = async () => {\n    const result = await itemApi.getItems();\n    setList(result);\n  };\n\n  const addItem = async (item: IItem): Promise<void> => {\n    await itemApi.addItem(item);\n    fetchItems();\n  };\n\n  return (\n    <>\n      <AddItem onItemAdded={addItem} />\n      <ItemsTable Items={list} />\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { FC, useEffect, useMemo } from 'react';\nimport { Stack, TextField, Autocomplete } from '@mui/material';\nimport { debounceFn } from '../debounceFn';\n\ninterface Props {\n  options: { [key: string]: any }[];\n  showByKey: string;\n  label?: string;\n  onOptionSelected: (opt: any) => void;\n  onInputChange: (val: string) => void;\n}\n\nconst AutoComp: FC<Props> = ({\n  options,\n  showByKey,\n  label,\n  onOptionSelected,\n  onInputChange,\n}) => {\n  const optionChange = (val: string) => {\n    const selected = options.find((opt) => opt[showByKey] === val);\n    onOptionSelected(selected);\n  };\n\n  const inputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onInputChange(e.target.value);\n  };\n\n  const debounced = useMemo(() => debounceFn(inputChange, 250), []);\n\n  useEffect(() => {\n    return () => {\n      debounced.cancel();\n    };\n  }, []);\n\n  return (\n    <Stack spacing={2} sx={{ width: 300 }}>\n      <Autocomplete\n        onChange={(ev, val) => optionChange(val)}\n        freeSolo\n        disableClearable\n        options={options.map((option) => option[showByKey])}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label={label ? label : 'Search'}\n            onChange={debounced}\n          />\n        )}\n      />\n    </Stack>\n  );\n};\n\nexport default AutoComp;\n","/**\n * A function that emits a side effect.\n */\n\nexport type Procedure = (...args: any[]) => any;\n\nexport type Options<TT> = {\n  isImmediate?: boolean;\n  maxWait?: number;\n  callback?: (data: TT) => void;\n};\n\nexport interface DebouncedFunction<F extends Procedure> {\n  (this: ThisParameterType<F>, ...args: Parameters<F>): Promise<ReturnType<F>>;\n  cancel: (reason?: any) => void;\n}\n\nexport function debounceFn<F extends Procedure>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options<ReturnType<F>> = {}\n): DebouncedFunction<F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  const isImmediate = options.isImmediate ?? false;\n  const callback = options.callback ?? false;\n  const maxWait = options.maxWait;\n  let lastInvokeTime = Date.now();\n\n  let promises: {\n    resolve: (x: ReturnType<F>) => void;\n    reject: (reason?: any) => void;\n  }[] = [];\n\n  function nextInvokeTimeout() {\n    if (maxWait !== undefined) {\n      const timeSinceLastInvocation = Date.now() - lastInvokeTime;\n\n      if (timeSinceLastInvocation + waitMilliseconds >= maxWait) {\n        return maxWait - timeSinceLastInvocation;\n      }\n    }\n\n    return waitMilliseconds;\n  }\n\n  const debouncedFunction = function (\n    this: ThisParameterType<F>,\n    ...args: Parameters<F>\n  ) {\n    const context = this;\n    return new Promise<ReturnType<F>>((resolve, reject) => {\n      const invokeFunction = function () {\n        timeoutId = undefined;\n        lastInvokeTime = Date.now();\n        if (!isImmediate) {\n          const result = func.apply(context, args);\n          callback && callback(result);\n          promises.forEach(({ resolve }) => resolve(result));\n          promises = [];\n        }\n      };\n\n      const shouldCallNow = isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(invokeFunction, nextInvokeTimeout());\n\n      if (shouldCallNow) {\n        const result = func.apply(context, args);\n        callback && callback(result);\n        return resolve(result);\n      }\n      promises.push({ resolve, reject });\n    });\n  };\n\n  debouncedFunction.cancel = function (reason?: any) {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    promises.forEach(({ reject }) => reject(reason));\n    promises = [];\n  };\n\n  return debouncedFunction;\n}\n\n/* function debounce(func: Function, wait = 166) {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n\n  function debounced(...args: any[]) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    const later = () => {\n      func.apply(that, args);\n    };\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = () => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  };\n\n  return debounced;\n}\nexport default debounce;\n */\n","import React, { useEffect, useState } from 'react';\nimport { clientApi } from '../../api/client';\nimport { IClient } from '../../client/typings';\nimport AutoComp from './autocomplete';\n\ninterface Props {\n  clientSelected: (client: IClient) => void;\n}\n\nconst ClientPicker = ({ clientSelected }: Props) => {\n  const [clients, setClients] = useState<IClient[]>([]);\n  const [chunk, setChunk] = useState('');\n  const getClients = async (val: string) => {\n    const list = await clientApi.getClients();\n    setClients(list);\n  };\n  useEffect(() => {\n    getClients(chunk);\n  }, [chunk]);\n\n  const inputChange = (val: string) => {\n    if (val === '') {\n      setClients([]);\n      return;\n    }\n    setChunk(val);\n  };\n\n  return (\n    <>\n      <AutoComp\n        onOptionSelected={clientSelected}\n        onInputChange={inputChange}\n        showByKey={'cardName'}\n        label={'Client'}\n        options={clients}\n      />\n    </>\n  );\n};\n\nexport default ClientPicker;\n","import React, { useEffect, useState } from 'react';\nimport { itemApi } from '../../api/item';\nimport { IItem } from '../../item/typing/IItem';\nimport AutoComp from './autocomplete';\n\ninterface Props {\n  itemSelected: (item: IItem) => void;\n}\n\nconst ItemPicker = ({ itemSelected }: Props) => {\n  const [items, setItems] = useState<IItem[]>([]);\n  const [chunk, setChunk] = useState('');\n  const getItems = async (val: string) => {\n    const list = await itemApi.getItems();\n    setItems(list);\n  };\n\n  useEffect(() => {\n    getItems(chunk);\n  }, [chunk]);\n\n  const inputChange = (val: string) => {\n    if (val === '') {\n      setItems([]);\n      return;\n    }\n    setChunk(val);\n  };\n\n  return (\n    <>\n      <AutoComp\n        onOptionSelected={itemSelected}\n        onInputChange={inputChange}\n        showByKey={'itemName'}\n        label={'Item'}\n        options={items}\n      />\n    </>\n  );\n};\n\nexport default ItemPicker;\n","import React from 'react';\nimport { IClient } from '../../client/typings';\nimport { IItem } from '../../item/typing/IItem';\nimport ClientPicker from '../../shared/components/ClientPicker';\nimport ItemPicker from '../../shared/components/ItemPicker';\n\ninterface Props {}\n\nconst CreateOrderPage = (props: Props) => {\n  const onClientSelected = (client: IClient) => {\n    console.log(client);\n  };\n\n  const onItemSelected = (item: IItem) => {\n    console.log(item);\n  };\n  return (\n    <>\n      <h1>Create Order</h1>\n      <ClientPicker clientSelected={onClientSelected} />\n      <ItemPicker itemSelected={onItemSelected} />\n    </>\n  );\n};\n\nexport default CreateOrderPage;\n","import { IOrder, IOrderHeader } from '../order/typings';\n\nclass OrderApi {\n  constructor(private url: string) {}\n  private headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n\n  public async getOrders(): Promise<IOrderHeader[]> {\n    try {\n      const orders = await fetch(`${this.url}/orders`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return orders;\n    } catch (error) {\n      console.log('error fetching orders', error);\n      return [];\n    }\n  }\n\n  public async addOrder(order: IOrder): Promise<void> {\n    try {\n      const response = await fetch(`${this.url}/orders`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify(order),\n      }).then((data) => data.json());\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  public async getOrderById(orderId: number): Promise<IOrder> {\n    try {\n      const response = await fetch(`${this.url}/orders/${orderId}`, {\n        headers: this.headers,\n      }).then((data) => data.json());\n      return response;\n    } catch (error: any) {\n      throw new Error(error);\n    }\n  }\n}\n\nexport const orderApi = new OrderApi('/api');\n","import React from 'react';\nimport { IOrder } from '../typings';\n\ninterface Props {\n  order: IOrder;\n}\n\nconst OrderDetails = ({ order }: Props) => {\n  const renderRows = () => {\n    return order.orderLines.map((line, i) => (\n      <tr key={line.lineId}>\n        <td>{i + 1}</td>\n        <td>{line.itemName}</td>\n        <td>{line.description}</td>\n        <td>{line.quantity}</td>\n      </tr>\n    ));\n  };\n  return (\n    <div>\n      {/* Order Header */}\n      <div>\n        <p>{order.cardName}</p>\n        <p>{order.docDate}</p>\n        <p>{order.docDueDate}</p>\n        <p>{order.shippingAddress}</p>\n        <table>\n          <thead>\n            <tr>\n              <th></th>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Quantity</th>\n            </tr>\n          </thead>\n          <tbody>{renderRows()}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetails;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { orderApi } from '../../api/order';\nimport { IOrder } from '../typings';\nimport OrderDetails from './OrderDetails';\n\ninterface Props {}\n\nconst OrderDetailsPage = (props: Props) => {\n  const { orderId } = useParams<{ orderId: string }>();\n  const [order, setOrder] = useState<IOrder>();\n  const [loading, setLoading] = useState<string>();\n\n  useEffect(() => {\n    fetchOrderDetails(parseInt(orderId));\n  }, [orderId]);\n\n  const fetchOrderDetails = async (orderId: number) => {\n    try {\n      setLoading('loading ...');\n      const details = await orderApi.getOrderById(orderId);\n      setOrder(details);\n      setLoading('');\n    } catch (error: any) {\n      setLoading(error.message);\n    }\n  };\n  return (\n    <>\n      {order && <OrderDetails order={order} />}\n      <p>{loading}</p>\n    </>\n  );\n};\n\nexport default OrderDetailsPage;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { orderApi } from '../api/order';\nimport { IOrderHeader } from './typings';\n\nexport default function OrderPage(): ReactElement {\n  const [list, setList] = useState<IOrderHeader[]>([]);\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const fetchOrders = async () => {\n    const result = await orderApi.getOrders();\n    setList(result);\n  };\n  const renderRows = () => {\n    const formatDate = (raw: string): string => {\n      const date = new Date(raw);\n      return new Intl.DateTimeFormat('en-US', {\n        dateStyle: 'medium',\n      }).format(date);\n    };\n    return list.map((or) => (\n      <tr>\n        <td>{or.orderId}</td>\n        <td>{or.cardName}</td>\n        <td>{formatDate(or.docDate)}</td>\n        <td>{formatDate(or.docDueDate)}</td>\n        <td>\n          <Link to={`/orders/${or.orderId}`}>{'>'}</Link>\n        </td>\n      </tr>\n    ));\n  };\n  return (\n    <div>\n      <Link to=\"orders/new\">\n        <button>New Order </button>\n      </Link>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Client</th>\n            <th>Date</th>\n            <th>Due Date</th>\n            <th>Details</th>\n          </tr>\n        </thead>\n        <tbody>{renderRows()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport ClientDetails from './client/ClientDetails/ClientDetailsPage';\nimport ClientPage from './client/ClientPage';\nimport { ItemDetailsPage } from './item/ItemDetails/ItemDetailsPage';\nimport { ItemPage } from './item/ItemPage';\nimport logo from './logo.svg';\nimport CreateOrderPage from './order/CreateOrder/CreateOrderPage';\nimport OrderDetailsPage from './order/OrderDetails/OrderDetailsPage';\nimport OrderPage from './order/OrderPage';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n      </div>\n      <Router>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <nav\n            style={{\n              display: 'flex',\n              width: 250,\n              justifyContent: 'space-evenly',\n              marginBottom: 40,\n            }}\n          >\n            <Link to=\"/items\">Items</Link>\n\n            <Link to=\"/clients\">Clients</Link>\n\n            <Link to=\"/orders\">Orders</Link>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/orders/new\" />\n            </Route>\n            <Route exact path=\"/items\">\n              <ItemPage />\n            </Route>\n            <Route path={`/items/:itemcode`}>\n              <ItemDetailsPage />\n            </Route>\n            <Route exact path=\"/clients\">\n              <ClientPage />\n            </Route>\n            <Route path=\"/clients/:cardcode\">\n              <ClientDetails />\n            </Route>\n            <Route exact path=\"/orders\">\n              <OrderPage />\n            </Route>\n            <Route path=\"/orders/new\">\n              <CreateOrderPage />\n            </Route>\n            <Route path=\"/orders/:orderId\">\n              <OrderDetailsPage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}